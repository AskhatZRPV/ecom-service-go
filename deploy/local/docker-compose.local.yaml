version: "3.9"
services:
  db:
    hostname: postgres
    image: postgres
    networks:
      new:
        aliases:
          - database
    environment:
      POSTGRES_DB: mydbname
      POSTGRES_USER: mydbuser
      POSTGRES_PASSWORD: mydbpwd
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
    ports:
      - "5432:5432"
  migrate:
    image: migrate/migrate
    networks:
      - new
    volumes:
      - ../../migrations:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://mydbuser:mydbpwd@database:5432/mydbname?sslmode=disable", "up"]
    links: 
      - db
    depends_on:
      db:
        condition: service_healthy
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - new
    restart: unless-stopped
  app:
    build:
      context: ../../
      dockerfile: ./deploy/local/Dockerfile.local
    depends_on:
      db:
        condition: service_healthy
    networks:
      - new
    ports:
      - "8080:8080"
networks:
  new:
volumes:
  pgadmin:
